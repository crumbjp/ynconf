// Generated by CoffeeScript 1.6.2
(function() {
  var config, execPath, fs, load, loadSubmodule, mergeSubmodule;

  fs = require('fs');

  execPath = process.cwd();

  config = null;

  mergeSubmodule = function(origin, sub) {
    var key, val;

    for (key in sub) {
      val = sub[key];
      if (origin[key] && typeof origin[key] === 'object' && typeof val === 'object') {
        mergeSubmodule(origin[key], val);
      } else {
        origin[key] = val;
      }
    }
    return origin;
  };

  loadSubmodule = function(path) {
    var directories, directory, file, files, list, mod, sub, _i, _j, _len, _len1;

    console.log("loadsub ", path);
    mod = {};
    if (!fs.existsSync("" + execPath + "/config/" + path)) {
      return mod;
    }
    list = fs.readdirSync("" + execPath + "/config/" + path);
    files = (function() {
      var _i, _len, _results;

      _results = [];
      for (_i = 0, _len = list.length; _i < _len; _i++) {
        file = list[_i];
        if (fs.lstatSync("" + execPath + "/config/" + path + "/" + file).isFile()) {
          _results.push(file);
        }
      }
      return _results;
    })();
    directories = (function() {
      var _i, _len, _results;

      _results = [];
      for (_i = 0, _len = list.length; _i < _len; _i++) {
        file = list[_i];
        if (fs.lstatSync("" + execPath + "/config/" + path + "/" + file).isDirectory()) {
          _results.push(file);
        }
      }
      return _results;
    })();
    console.log("F:", files);
    console.log("D:", directories);
    for (_i = 0, _len = files.length; _i < _len; _i++) {
      file = files[_i];
      file = file.replace(/\.js$/, "");
      file = file.replace(/\.coffee$/, "");
      file = file.replace(/\.json$/, "");
      mod[file] = require("" + execPath + "/config/" + path + "/" + file);
    }
    for (_j = 0, _len1 = directories.length; _j < _len1; _j++) {
      directory = directories[_j];
      sub = {};
      sub[directory] = loadSubmodule("" + path + "/" + directory + "/");
      console.log("S:", sub);
      console.log("O:", mod);
      mergeSubmodule(mod, sub);
      console.log("M:", mod);
    }
    return mod;
  };

  load = function(mode) {
    var sub;

    mode || (mode = process.env.NODE_ENV || "development");
    config = require("" + execPath + "/config/" + mode);
    console.log("mode", mode);
    if (!fs.existsSync("" + execPath + "/config/" + mode + "/")) {
      return;
    }
    sub = loadSubmodule("" + mode);
    return mergeSubmodule(config, sub);
  };

  load();

  config._load = load;

  module.exports = config;

}).call(this);
